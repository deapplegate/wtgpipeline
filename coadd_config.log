~/wtgpipeline$ grep -C 7 -i "config" do_coadd_batch.sh 
    exit 5

fi
rm -f instrument_$$
. ${INSTRUMENT:?}.ini > /tmp/subaru.out 2>&1

if [ "${INSTRUMENT}" == "SUBARU" ]; then
  #old SUBARU.ini# CONFIG=`grep 'config=' ${INSTRUMENT}.ini | sed 's/config=//g'`
  CONFIG=`grep 'config=' ${INSTRUMENT}.ini | sed 's/export\ config=//g'`
  echo "CONFIG=" $CONFIG
fi

########./BonnLogger.py config \
########    cluster=${cluster} \
########    filter=${filter} \
########    config=${config} \
########    ending=${ending} \
########    astrommethod=${ASTROMMETHOD} \
########    astrometrycat=${ASTROMETRYCAT} \

######################
#   Find Ending
######################
--
          coaddmodes="${coaddmodes} all"

        ##############################
        elif [ ${coadd} == "gabodsid" ]; then
          GABODSIDS=`${P_LDACTOASC} -i ${SUBARUDIR}/${cluster}/${filter}/SCIENCE/cat/chips.cat6 -t STATS -b -k GABODSID | sort | uniq | awk '{printf "%i ", $0}'`
          for GABODSID in ${GABODSIDS}
          do
            #adam-ask# I changed it to take CONFIG into account when considering the IMAGEID!=6 cut
            if [ "${CONFIG}" == "10_3" ]; then
                constructConditions gabodsid "(GABODSID=${GABODSID})" ""
            else
                constructConditions gabodsid "((IMAGEID!=6)AND(GABODSID=${GABODSID}))" ""
            fi
            CONDITION=${constructed_condition}
            #./prepare_coadd_swarp.sh -m ${SUBARUDIR}/${cluster}/${filter} \
            #                      -s SCIENCE \
--
            ic -p 8 '16 1 %1 1e-6 < ?' ${SUBARUDIR}/${cluster}/${filter}/SCIENCE/coadd_${cluster}_gabodsid${GABODSID}/coadd.weight.fits > ${SUBARUDIR}/${cluster}/${filter}/SCIENCE/coadd_${cluster}_gabodsid${GABODSID}/coadd.flag.fits
	    if [ "$?" -gt "0" ]; then exit $? ; fi
            coaddmodes="${coaddmodes} gabodsid${GABODSID}"
          done

        ##############################
        elif [ ${coadd} == "good" ]; then
            #adam-ask# is this right? I mean you could be coadding two different configs here couldn't you (I'm not sure if we should in principle, but we do in practice)
            if [ "${CONFIG}" == "10_3" ]; then
                #adam# constructConditions good "" "((seeing_rh_al<0.8)AND(e_abs<0.08))"
                #adam# I have to have some kind of condition here. else I get an error
                constructConditions good "" "(seeing_rh_al<3.5)"
            else
                #adam# constructConditions good "(IMAGEID!=6)" "((seeing_rh_al<0.8)AND(e_abs<0.08))"
                #adam# this should only happen for MACS1226+21 10_2 "good" mode
                #adam-old# constructConditions good "(IMAGEID!=6)" "((EXPOSURE!=6)AND(EXPOSURE!=7))"
--
        ##############################
        ### new rotation coadd: split by both night and rotation
        elif [ ${coadd} == "rotation" ]; then
          ROTATIONS=`${P_LDACTOASC} -i ${SUBARUDIR}/${cluster}/${filter}/SCIENCE/cat/chips.cat6 -t STATS -b -k ROTATION | sort | uniq | awk '{printf "%i ", $0}'`
          ${P_LDACTOASC} -i ${SUBARUDIR}/${cluster}/${filter}/SCIENCE/cat/chips.cat6 -t STATS -b -k GABODSID ROTATION | sort | uniq > gabrot_$$.dat
          while read GABODSID ROTATION
          do
            #adam-ask# definitely wrong the old way, right? I changed it to take CONFIG into account when considering the IMAGEID!=6 cut
            if [ "${CONFIG}" == "10_3" ]; then
                constructConditions rotation "((GABODSID=${GABODSID})AND(ROTATION=${ROTATION}))" ""
            else
                constructConditions rotation "(((IMAGEID!=6)AND(GABODSID=${GABODSID}))AND(ROTATION=${ROTATION}))" ""
            fi
